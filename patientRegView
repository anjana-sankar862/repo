public class PatientRegistrationView {
    public JFrame frame;
    public JTextField firstNameField, lastNameField, ageField, emailField, contactField;
    public JTextField addressLine1Field, addressLine2Field, addressLine3Field, pincodeField, emergencyContactNameField, emergencyContactNumberField;
    public JComboBox<String> sexCombo, maritalStatusCombo, bloodGroupCombo, stateComboBox;
    public JDateChooser dobChooser;
    public JButton registerButton, viewPatientsButton,updateButton;
    static{
    	JsonHandler.readPatients();
    }

    public PatientRegistrationView() {
        frame = new JFrame("Patient Registration");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(600, 700);
        frame.setLayout(new BorderLayout());

        // Header Panel
        JPanel headerPanel = new JPanel();
        headerPanel.setBackground(new Color(0, 153, 153));
        JLabel headerLabel = new JLabel("Patient Registration");
        headerLabel.setForeground(Color.WHITE);
        headerLabel.setFont(new Font("Arial", Font.BOLD, 20));
        headerPanel.add(headerLabel);
        frame.add(headerPanel, BorderLayout.NORTH);

        // Main Panel
        JPanel mainPanel = new JPanel();
        mainPanel.setLayout(new BoxLayout(mainPanel, BoxLayout.Y_AXIS));
        mainPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        frame.add(mainPanel, BorderLayout.CENTER);
        mainPanel.setBackground(Color.decode("#E3F2FD"));


        // Personal Details Panel
        JPanel personalDetailsPanel = new JPanel(new GridBagLayout());
        personalDetailsPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.decode("#64B5F6")),
                 null, TitledBorder.LEFT, TitledBorder.TOP, new Font("Arial", Font.BOLD, 14), Color.decode("#1565C0")));
        personalDetailsPanel.setBackground(Color.WHITE);

        personalDetailsPanel.setBorder(BorderFactory.createTitledBorder("Personal Details"));
        
       // personalDetailsPanel.setBackground(new Color(224, 255, 255));

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(5, 5, 5, 5);
        gbc.fill = GridBagConstraints.HORIZONTAL;

        // First Name and Last Name
        gbc.gridx = 0; gbc.gridy = 0;
        personalDetailsPanel.add(new JLabel("First Name:"), gbc);
        firstNameField = new JTextField(15);
        gbc.gridx = 1;
        personalDetailsPanel.add(firstNameField, gbc);

        gbc.gridx = 2;
        personalDetailsPanel.add(new JLabel("Last Name:"), gbc);
        lastNameField = new JTextField(15);
        gbc.gridx = 3;
        personalDetailsPanel.add(lastNameField, gbc);

        // DOB and Age
        gbc.gridx = 0; gbc.gridy = 1;
        personalDetailsPanel.add(new JLabel("Date of Birth:"), gbc);
        dobChooser = new JDateChooser();
        gbc.gridx = 1;
        personalDetailsPanel.add(dobChooser, gbc);

        gbc.gridx = 2;
        personalDetailsPanel.add(new JLabel("Age:"), gbc);
        ageField = new JTextField(10);
        ageField.setEditable(false);
        gbc.gridx = 3;
        personalDetailsPanel.add(ageField, gbc);

        // Sex and Marital Status
        gbc.gridx = 0; gbc.gridy = 2;
        personalDetailsPanel.add(new JLabel("Sex:"), gbc);
        sexCombo = new JComboBox<>(new String[]{"Male", "Female", "Other"});
        gbc.gridx = 1;
        personalDetailsPanel.add(sexCombo, gbc);

        gbc.gridx = 2;
        personalDetailsPanel.add(new JLabel("Marital Status:"), gbc);
        maritalStatusCombo = new JComboBox<>(new String[]{"Single", "Married", "Divorced", "Widowed"});
        gbc.gridx = 3;
        personalDetailsPanel.add(maritalStatusCombo, gbc);

        // Blood Group
        gbc.gridx = 0; gbc.gridy = 3;
        personalDetailsPanel.add(new JLabel("Blood Group:"), gbc);
        bloodGroupCombo = new JComboBox<>(new String[]{"A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-"});
        gbc.gridx = 1;
        personalDetailsPanel.add(bloodGroupCombo, gbc);

        mainPanel.add(personalDetailsPanel);

        // Contact Details Panel
        JPanel contactDetailsPanel = new JPanel(new GridBagLayout());
        contactDetailsPanel .setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.decode("#64B5F6")),
                null, TitledBorder.LEFT, TitledBorder.TOP, new Font("Arial", Font.BOLD, 14), Color.decode("#1565C0")));
        contactDetailsPanel .setBackground(Color.WHITE);

        contactDetailsPanel.setBorder(BorderFactory.createTitledBorder("Contact Details"));
        //contactDetailsPanel.setBackground(new Color(240, 255, 255));

        // Email and Phone Number
        gbc.gridx = 0; gbc.gridy = 0;
        contactDetailsPanel.add(new JLabel("Email:"), gbc);
        emailField = new JTextField(15);
        gbc.gridx = 1;
        contactDetailsPanel.add(emailField, gbc);

        gbc.gridx = 2;
        contactDetailsPanel.add(new JLabel("Phone Number:"), gbc);
        contactField = new JTextField(15);
        gbc.gridx = 3;
        contactDetailsPanel.add(contactField, gbc);

        // Address Line 1 and 2
        gbc.gridx = 0; gbc.gridy = 1;
        contactDetailsPanel.add(new JLabel("Address Line 1:"), gbc);
        addressLine1Field = new JTextField(15);
        gbc.gridx = 1;
        contactDetailsPanel.add(addressLine1Field, gbc);

        gbc.gridx = 2;
        contactDetailsPanel.add(new JLabel("Address Line 2:"), gbc);
        addressLine2Field = new JTextField(15);
        gbc.gridx = 3;
        contactDetailsPanel.add(addressLine2Field, gbc);

        // Address Line 3
        gbc.gridx = 0; gbc.gridy = 2;
        contactDetailsPanel.add(new JLabel("Address Line 3:"), gbc);
        addressLine3Field = new JTextField(15);
        gbc.gridx = 1;
        gbc.gridwidth = 3;
        contactDetailsPanel.add(addressLine3Field, gbc);
        gbc.gridwidth = 1;

        // Pincode and State
        gbc.gridx = 0; gbc.gridy = 3;
        contactDetailsPanel.add(new JLabel("Pincode:"), gbc);
        pincodeField = new JTextField(10);
        gbc.gridx = 1;
        contactDetailsPanel.add(pincodeField, gbc);

        gbc.gridx = 2;
        contactDetailsPanel.add(new JLabel("State:"), gbc);
        stateComboBox = new JComboBox<>(new String[]{"Andhra Pradesh", "Assam", "Bihar", "Karnataka", "Kerala", "Tamil Nadu", "Telangana", "West Bengal"});
        gbc.gridx = 3;
        contactDetailsPanel.add(stateComboBox, gbc);

        mainPanel.add(contactDetailsPanel);

        // Emergency Contact Panel
        JPanel emergencyContactPanel = new JPanel(new GridBagLayout());
        emergencyContactPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.decode("#64B5F6")),
                null, TitledBorder.LEFT, TitledBorder.TOP, new Font("Arial", Font.BOLD, 14), Color.decode("#1565C0")));
        emergencyContactPanel.setBackground(Color.WHITE);

        emergencyContactPanel.setBorder(BorderFactory.createTitledBorder("Emergency Contact"));
       // emergencyContactPanel.setBackground(new Color(245, 255, 250));

        // Name and Phone Number
        gbc.gridx = 0; gbc.gridy = 0;
        emergencyContactPanel.add(new JLabel("Name:"), gbc);
        emergencyContactNameField = new JTextField(15);
        gbc.gridx = 1;
        emergencyContactPanel.add(emergencyContactNameField, gbc);

        gbc.gridx = 2;
        emergencyContactPanel.add(new JLabel("Phone Number:"), gbc);
        emergencyContactNumberField = new JTextField(15);
        gbc.gridx = 3;
        emergencyContactPanel.add(emergencyContactNumberField, gbc);

        mainPanel.add(emergencyContactPanel);

        // Buttons Panel
        JPanel buttonPanel = new JPanel();
        buttonPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.decode("#64B5F6")),
                null, TitledBorder.LEFT, TitledBorder.TOP, new Font("Arial", Font.BOLD, 14), Color.decode("#1565C0")));
        buttonPanel.setBackground(Color.WHITE);
       // buttonPanel.setBackground(new Color(224, 224, 224));
        registerButton = new JButton("Register");
        viewPatientsButton = new JButton("View Patients");
        updateButton=new JButton("Update");
        updateButton.setVisible(false);
        buttonPanel.add(registerButton);
        buttonPanel.add(viewPatientsButton);
        buttonPanel.add(updateButton);
        frame.add(buttonPanel, BorderLayout.SOUTH);
        
        dobChooser.addPropertyChangeListener(e -> {
            if ("date".equals(e.getPropertyName())) {
            	LocalDate today=LocalDate.now();
                LocalDate dob = dobChooser.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                int age = Period.between(dob, LocalDate.now()).getYears();
                if(dob.getYear()==today.getYear()) {
                	Period period=Period.between(dob, today);
                	int months=period.getMonths();
                	ageField.setText(months+"months");
                	
                }
                else {
                ageField.setText(String.valueOf(age));
            }
            }
        });


        frame.setVisible(true);
        
    }
 
    

    public void resetFields() {
        firstNameField.setText("");
        lastNameField.setText("");
        dobChooser.setDate(new Date());
        ageField.setText("");
        sexCombo.setSelectedIndex(0);
        maritalStatusCombo.setSelectedIndex(0);
        bloodGroupCombo.setSelectedIndex(0);
        emailField.setText("");
        contactField.setText("");
        addressLine1Field.setText("");
        addressLine2Field.setText("");
        addressLine3Field.setText("");
        pincodeField.setText("");
        stateComboBox.setSelectedIndex(0);
        emergencyContactNameField.setText("");
        emergencyContactNumberField.setText("");
    }

}
